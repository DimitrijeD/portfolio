<?php

/*
Klasa služi za izračunavanje ukupnog broja puteva bilo koje r*k 3...50 dimenzija. 
*/

class Testiranje_formule_broja_puteva_u_osm
{
	public $r, 
		   $k;

// ----------------------------------------------------------------------------------------------------------------------------------

	public function __construct($r, $k)
	{
		$this->r = $r;
		$this->k = $k;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	public function vrati_red()
	{
		return $this->r;
	}

	public function vrati_kolonu()
	{
		return $this->k;
	}

	public function izracunaj_sa_izvedenom_formulom()
	{
		if($this->r >= 12 AND $this->k >= 12 )
		{
			return 80 * $this->r * $this->k - 390 * $this->r - 390 * $this->k + 2020;
		} else {
			echo '<p>Формула није намењена за рачунање путева осмосмерке чије су димензије мање од 12*12 </p>';
		}
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	public function izracunaj_broj_puteva()
	{
		$this->dole_desno = $this->dole_desno($this->r, $this->k);
		// echo "<br>" . "dole_desno = " . $this->dole_desno . "<br>";

		$this->desno = $this->desno($this->r, $this->k);
		// echo "<br>" . "desno = " . $this->desno . "<br>";
		
		/*
		za smer dole je ista formula kao i za desno, tj ista logika, samo obrnuto, red treba da bude kolona, kolona treba da se tretira kao red
		i treba da da tacno resenje
		*/

		$this->dole = $this->desno($this->k, $this->r);
		// echo "<br>" . "dole = " . $this->dole . "<br>";

		$this->gore_desno = $this->dole_desno($this->k, $this->r);
		// echo "<br>" . "gore_desno = " . $this->gore_desno . "<br>";

		$this->ukupan_broj_svih_puteva = 2 * ( $this->desno + $this->dole ) + 2 * ( $this->dole_desno + $this->gore_desno );

		return $this->ukupan_broj_svih_puteva;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno($r, $k)
	{
		$min = min($r, $k);

		switch ($min) 
		{

			case 12:
				$u_dole_desno = $this->dole_desno_min_12($r, $k);
				break;
				// ------------
			case 11:
				$u_dole_desno = $this->dole_desno_min_11($r, $k);
				break;
				// ------------	
			case 10:
				$u_dole_desno = $this->dole_desno_min_10($r, $k);
				break;
				// ------------
			case 9:
				$u_dole_desno = $this->dole_desno_min_9($r, $k);
				break;
				// ------------
			case 8:
				$u_dole_desno = $this->dole_desno_min_8($r, $k);
				break;
				// ------------
			case 7:
				$u_dole_desno = $this->dole_desno_min_7($r, $k);
				break;
				// ------------
			case 6:
				$u_dole_desno = $this->dole_desno_min_6($r, $k);
				break;
				// ------------
			case 5:
				$u_dole_desno = $this->dole_desno_min_5($r, $k);
				break;
				// ------------
			case 4:
				$u_dole_desno = $this->dole_desno_min_4($r, $k);
				break;
				// ------------
			case 3:
				$u_dole_desno = $this->dole_desno_min_3($r, $k);
				break;
				// ------------
			default:
				if($min > 12)
				{
					$u_dole_desno = $this->dole_desno_min_12($r, $k);
				} else {
					echo "bug";
					exit();
				}
				
				break;
		}

		return $u_dole_desno;

	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno($r, $k)
	{
		switch ($k) 
		{

			case 12:
				$u_desno = $this->desno_12($r, $k);
				break;
				// ------------
			case 11:
				$u_desno = $this->desno_11($r, $k);
				break;
				// ------------	
			case 10:
				$u_desno = $this->desno_10($r, $k);
				break;
				// ------------
			case 9:
				$u_desno = $this->desno_9($r, $k);
				break;
				// ------------
			case 8:
				$u_desno = $this->desno_8($r, $k);
				break;
				// ------------
			case 7:
				$u_desno = $this->desno_7($r, $k);
				break;
				// ------------
			case 6:
				$u_desno = $this->desno_6($r, $k);
				break;
				// ------------
			case 5:
				$u_desno = $this->desno_5($r, $k);
				break;
				// ------------
			case 4:
				$u_desno = $this->desno_4($r, $k);
				break;
				// ------------
			case 3:
				$u_desno = $this->desno_3($r, $k);
				break;
				// ------------
			default:
				if($k > 12)
				{
					$u_desno = $this->desno_12($r, $k);
				} else {
					echo "bug";
					exit();
				}
				break;
		}

		return $u_desno;

	}

// ----------------------------------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------  POCETAK DESNO -------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_12($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) 	   
	              		  + ( $k -  3 )	
				  		  + ( $k -  4 )	
				  		  + ( $k -  5 )	
	              		  + ( $k -  6 )	
				  		  + ( $k -  7 )	
				  		  + ( $k -  8 )	 
	              		  + ( $k -  9 )	
				  		  + ( $k - 10 )	
	             		  + ( $k - 11 ) );

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_11($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) 	   
	              		  + ( $k -  3 )	
				  		  + ( $k -  4 )	
				  		  + ( $k -  5 )	
	              		  + ( $k -  6 )	
				  		  + ( $k -  7 )	
				  		  + ( $k -  8 )	 
	              		  + ( $k -  9 )	
				  		  + ( $k - 10 )	);

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_10($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) 	   
	              		  + ( $k -  3 )	
				  		  + ( $k -  4 )	
				  		  + ( $k -  5 )	
	              		  + ( $k -  6 )	
				  		  + ( $k -  7 )	
				  		  + ( $k -  8 )	 
	              		  + ( $k -  9 ));

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_9($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) 	   
	              		  + ( $k -  3 )	
				  		  + ( $k -  4 )	
				  		  + ( $k -  5 )	
	              		  + ( $k -  6 )	
				  		  + ( $k -  7 )	
				  		  + ( $k -  8 ));

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_8($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) 	   
	              		  + ( $k -  3 )	
				  		  + ( $k -  4 )	
				  		  + ( $k -  5 )	
	              		  + ( $k -  6 )	
				  		  + ( $k -  7 ));

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_7($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) 	   
	              		  + ( $k -  3 )	
				  		  + ( $k -  4 )	
				  		  + ( $k -  5 )	
	              		  + ( $k -  6 ));

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_6($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) 	   
	              		  + ( $k -  3 )	
				  		  + ( $k -  4 )	
				  		  + ( $k -  5 )	);

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_5($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) 	   
	              		  + ( $k -  3 )	
				  		  + ( $k -  4 )	);

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_4($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) 	   
	              		  + ( $k -  3 ));

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function desno_3($r, $k)
	{
		$u_desno =  $r * (  ( $k -  2 ) );

		return $u_desno;
	}

// ----------------------------------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------  KRAJ DESNO ----------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------

// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

// ----------------------------------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------  POCETAK DOLE DESNO --------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------

	// imao sam jednostavniji oblik formule u word doc........... attention 0
	private function dole_desno_min_12($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4)            	
			+ ($r * $k - 3 * $r  -  3 * $k +   9)		
			+ ($r * $k - 4 * $r  -  4 * $k +  16)		
			+ ($r * $k - 5 * $r  -  5 * $k +  25)		
			+ ($r * $k - 6 * $r  -  6 * $k +  36)		
			+ ($r * $k - 7 * $r  -  7 * $k +  49)		
			+ ($r * $k - 8 * $r  -  8 * $k +  64)		
			+ ($r * $k - 9 * $r  -  9 * $k +  81)		
			+ ($r * $k - 10 * $r  - 10 * $k + 100)	
			+ ($r * $k - 11 * $r  - 11 * $k + 121) ;

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno_min_11($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4)            	
			+ ($r * $k - 3 * $r  -  3 * $k +   9)		
			+ ($r * $k - 4 * $r  -  4 * $k +  16)		
			+ ($r * $k - 5 * $r  -  5 * $k +  25)		
			+ ($r * $k - 6 * $r  -  6 * $k +  36)		
			+ ($r * $k - 7 * $r  -  7 * $k +  49)		
			+ ($r * $k - 8 * $r  -  8 * $k +  64)		
			+ ($r * $k - 9 * $r  -  9 * $k +  81)		
			+ ($r * $k - 10 * $r  - 10 * $k + 100) ;

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno_min_10($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4)            	
			+ ($r * $k - 3 * $r  -  3 * $k +   9)		
			+ ($r * $k - 4 * $r  -  4 * $k +  16)		
			+ ($r * $k - 5 * $r  -  5 * $k +  25)		
			+ ($r * $k - 6 * $r  -  6 * $k +  36)		
			+ ($r * $k - 7 * $r  -  7 * $k +  49)		
			+ ($r * $k - 8 * $r  -  8 * $k +  64)		
			+ ($r * $k - 9 * $r  -  9 * $k +  81) ;

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno_min_9($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4)            	
			+ ($r * $k - 3 * $r  -  3 * $k +   9)		
			+ ($r * $k - 4 * $r  -  4 * $k +  16)		
			+ ($r * $k - 5 * $r  -  5 * $k +  25)		
			+ ($r * $k - 6 * $r  -  6 * $k +  36)		
			+ ($r * $k - 7 * $r  -  7 * $k +  49)		
			+ ($r * $k - 8 * $r  -  8 * $k +  64);

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno_min_8($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4)            	
			+ ($r * $k - 3 * $r  -  3 * $k +   9)		
			+ ($r * $k - 4 * $r  -  4 * $k +  16)		
			+ ($r * $k - 5 * $r  -  5 * $k +  25)		
			+ ($r * $k - 6 * $r  -  6 * $k +  36)		
			+ ($r * $k - 7 * $r  -  7 * $k +  49);

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno_min_7($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4)            	
			+ ($r * $k - 3 * $r  -  3 * $k +   9)		
			+ ($r * $k - 4 * $r  -  4 * $k +  16)		
			+ ($r * $k - 5 * $r  -  5 * $k +  25)		
			+ ($r * $k - 6 * $r  -  6 * $k +  36);

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno_min_6($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4)            	
			+ ($r * $k - 3 * $r  -  3 * $k +   9)		
			+ ($r * $k - 4 * $r  -  4 * $k +  16)		
			+ ($r * $k - 5 * $r  -  5 * $k +  25);

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno_min_5($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4)            	
			+ ($r * $k - 3 * $r  -  3 * $k +   9)		
			+ ($r * $k - 4 * $r  -  4 * $k +  16);

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno_min_4($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4)            	
			+ ($r * $k - 3 * $r  -  3 * $k +   9);

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------

	private function dole_desno_min_3($r, $k)
	{
		$u =  ($r * $k - 2 * $r  -  2 * $k +   4);

		return $u;
	}

// ----------------------------------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------  KRAJ DOLE DESNO -----------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------

}

?>